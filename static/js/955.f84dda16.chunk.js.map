{"version":3,"file":"static/js/955.f84dda16.chunk.js","mappings":"8SACMA,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,sGACFD,EAAAA,GAAAA,IAAU,sBAAuB,CACtDE,OAAQ,CAAEC,QAASJ,KAFI,uBACjBK,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qDAOXC,EAAc,mCAAG,WAAMC,GAAN,yFACLN,EAAAA,GAAAA,IAAU,gBAAiB,CAChDE,OAAQ,CAAEC,QAASJ,EAASO,MAAAA,KAFF,uBACpBF,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdG,EAAY,mCAAG,WAAMD,GAAN,yFACHN,EAAAA,GAAAA,IAAA,iBAAoBM,GAAS,CAClDJ,OAAQ,CAAEC,QAASJ,EAASO,MAAAA,KAFJ,uBAClBF,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAQZI,EAAO,mCAAG,WAAMF,GAAN,yFACEN,EAAAA,GAAAA,IAAA,iBAAoBM,EAApB,YAAqC,CAC1DJ,OAAQ,CAAEC,QAASJ,EAASO,MAAAA,KAFT,uBACbF,EADa,EACbA,KADa,kBAIdA,GAJc,2CAAH,sDAQPK,EAAU,mCAAG,WAAMH,GAAN,yFACDN,EAAAA,GAAAA,IAAA,iBAAoBM,EAApB,YAAqC,CAC1DJ,OAAQ,CAAEC,QAASJ,EAASO,MAAAA,KAFN,uBAChBF,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,qD,+IC5BR,SAASM,IACtB,OAA8BC,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,qGACER,EAAAA,EAAAA,IAAWK,GADb,OAClBI,EADkB,OAExBL,EAAWK,EAAYC,SAFC,2CAAH,qDAIvBF,GAED,GAAE,KAGD,iCACE,oCADF,OAEGL,QAFH,IAEGA,OAFH,EAEGA,EAASQ,KAAI,SAAAC,GAAI,OAChB,2BACE,oCAAYA,EAAKC,WACjB,qCAAaD,EAAKE,aAFXF,EAAKG,GADE,MAQvB,C","sources":["helpers/filmApi.js","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '2996ac4c632c41fce1458614a9485a98';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: { api_key: API_KEY },\n  });\n  return data;\n};\n\nexport const getMovieByName = async query => {\n  const { data } = await axios.get('/search/movie', {\n    params: { api_key: API_KEY, query },\n  });\n  return data;\n};\n\nexport const getMovieById = async query => {\n  const { data } = await axios.get(`/movie/${query}`, {\n    params: { api_key: API_KEY, query },\n  });\n  return data;\n};\n//  /movie/{movie_id}\n\nexport const getCast = async query => {\n  const { data } = await axios.get(`/movie/${query}/credits`, {\n    params: { api_key: API_KEY, query },\n  });\n  return data;\n};\n//   /movie/{movie_id}/credits\n\nexport const getReviews = async query => {\n  const { data } = await axios.get(`/movie/${query}/credits`, {\n    params: { api_key: API_KEY, query },\n  });\n  return data;\n};\n//   /movie/{movie_id}/credits","import { getReviews } from 'helpers/filmApi';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviewsDetails = async () => {\n      const reviewsData = await getReviews(movieId);\n      setReviews(reviewsData.results);\n    };\n    getReviewsDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <h2>Reviews</h2>\n      {reviews?.map(item => (\n        <li key={item.id}>\n          <p>Author: {item.author}</p>\n          <p>Content: {item.content}</p>\n        </li>\n      ))}\n    </>\n  );\n}\n"],"names":["API_KEY","axios","getTrending","params","api_key","data","getMovieByName","query","getMovieById","getCast","getReviews","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","getReviewsDetails","reviewsData","results","map","item","author","content","id"],"sourceRoot":""}
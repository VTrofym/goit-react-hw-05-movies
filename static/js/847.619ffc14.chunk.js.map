{"version":3,"file":"static/js/847.619ffc14.chunk.js","mappings":"8SACMA,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,sGACFD,EAAAA,GAAAA,IAAU,sBAAuB,CACtDE,OAAQ,CAAEC,QAASJ,KAFI,uBACjBK,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qDAOXC,EAAc,mCAAG,WAAMC,GAAN,yFACLN,EAAAA,GAAAA,IAAU,gBAAiB,CAChDE,OAAQ,CAAEC,QAASJ,EAASO,MAAAA,KAFF,uBACpBF,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdG,EAAY,mCAAG,WAAMD,GAAN,yFACHN,EAAAA,GAAAA,IAAA,iBAAoBM,GAAS,CAClDJ,OAAQ,CAAEC,QAASJ,EAASO,MAAAA,KAFJ,uBAClBF,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAQZI,EAAO,mCAAG,WAAMF,GAAN,yFACEN,EAAAA,GAAAA,IAAA,iBAAoBM,EAApB,YAAqC,CAC1DJ,OAAQ,CAAEC,QAASJ,EAASO,MAAAA,KAFT,uBACbF,EADa,EACbA,KADa,kBAIdA,GAJc,2CAAH,sDAQPK,EAAU,mCAAG,WAAMH,GAAN,yFACDN,EAAAA,GAAAA,IAAA,iBAAoBM,EAApB,YAAqC,CAC1DJ,OAAQ,CAAEC,QAASJ,EAASO,MAAAA,KAFN,uBAChBF,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,qD,6HC9BR,SAASM,EAAT,GAAgC,IAAhBC,EAAe,EAAfA,YAC7B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,0BACE,kBAAMC,SAPO,SAAAC,GACfA,EAAMC,iBACNN,EAAYE,EACb,EAIG,WACE,kBAAOK,SAbQ,SAAAF,GACnB,IAAQG,EAAUH,EAAMI,OAAhBD,MACRL,EAAcK,EACf,EAUoCE,KAAK,UACpC,mBAAQA,KAAK,SAAb,wBAIP,C,sBCnBYC,EAAS,WAAO,IAAD,IAC1B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAI,UAAGF,EAAaG,IAAI,eAApB,QAA+B,EACnCrB,EAAK,UAAGkB,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAA4Bf,EAAAA,EAAAA,UAAS,IAArC,eAAOgB,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,WAAOzB,GAAP,4FAAcoB,EAAd,+BAAqB,EAArB,UACKrB,EAAAA,EAAAA,IAAeC,EAAOoB,GAD3B,OACRtB,EADQ,OAEd4B,QAAQC,IAAI7B,EAAK8B,SACjBL,EAAUzB,EAAK8B,SAHD,2CAAH,sDAKTR,EAAO,GAAKpB,EACdyB,EAAQzB,EAAOoB,GACNpB,GACTyB,EAAQzB,EAEX,GAAE,CAACA,EAAOoB,IAMX,OACE,iCACE,SAAChB,EAAD,CAAMC,YANU,SAAAP,GAClBqB,EAAgB,CAAEnB,MAAOF,GAC1B,IAKIwB,IACC,+BACGA,QADH,IACGA,OADH,EACGA,EAAQO,KAAI,SAAAC,GAAK,OAChB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,kBADjCH,EAAME,GADC,QAS3B,C","sources":["helpers/filmApi.js","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '2996ac4c632c41fce1458614a9485a98';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: { api_key: API_KEY },\n  });\n  return data;\n};\n\nexport const getMovieByName = async query => {\n  const { data } = await axios.get('/search/movie', {\n    params: { api_key: API_KEY, query },\n  });\n  return data;\n};\n\nexport const getMovieById = async query => {\n  const { data } = await axios.get(`/movie/${query}`, {\n    params: { api_key: API_KEY, query },\n  });\n  return data;\n};\n//  /movie/{movie_id}\n\nexport const getCast = async query => {\n  const { data } = await axios.get(`/movie/${query}/credits`, {\n    params: { api_key: API_KEY, query },\n  });\n  return data;\n};\n//   /movie/{movie_id}/credits\n\nexport const getReviews = async query => {\n  const { data } = await axios.get(`/movie/${query}/reviews`, {\n    params: { api_key: API_KEY, query },\n  });\n  return data;\n};\n//   /movie/{movie_id}/reviews","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n// import css from './Form.module.css';\n\nexport default function Form({ getDataFilm }) {\n  const [submitFilm, setSubmitFilm] = useState('');\n\n  const handleChange = event => {\n    const { value } = event.target;\n    setSubmitFilm(value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    getDataFilm(submitFilm);\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input onChange={handleChange} type=\"text\" />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n}\n\nForm.propTypes = {\n  getDataFilm: PropTypes.func.isRequired,\n};\n","import Form from 'components/Form/Form';\nimport { getMovieByName } from 'helpers/filmApi';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\n\nexport const Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page') ?? 1;\n  const query = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getData = async (query, page = 1) => {\n      const data = await getMovieByName(query, page);\n      console.log(data.results);\n      setMovies(data.results);\n    };\n    if (page > 1 && query) {\n      getData(query, page);\n    } else if (query) {\n      getData(query);\n    }\n  }, [query, page]);\n\n  const getFormData = data => {\n    setSearchParams({ query: data });\n  };\n\n  return (\n    <>\n      <Form getDataFilm={getFormData} />\n      {movies && (\n        <ul>\n          {movies?.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>{movie.original_title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n"],"names":["API_KEY","axios","getTrending","params","api_key","data","getMovieByName","query","getMovieById","getCast","getReviews","Form","getDataFilm","useState","submitFilm","setSubmitFilm","onSubmit","event","preventDefault","onChange","value","target","type","Movies","useSearchParams","searchParams","setSearchParams","page","get","movies","setMovies","useEffect","getData","console","log","results","map","movie","to","id","original_title"],"sourceRoot":""}
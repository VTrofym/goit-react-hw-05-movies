{"version":3,"file":"static/js/847.54899c96.chunk.js","mappings":"8SACMA,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,sGACFD,EAAAA,GAAAA,IAAU,sBAAuB,CACtDE,OAAQ,CAAEC,QAASJ,KAFI,uBACjBK,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qDAOXC,EAAc,mCAAG,WAAMC,GAAN,yFACLN,EAAAA,GAAAA,IAAU,gBAAiB,CAChDE,OAAQ,CAAEC,QAASJ,EAASO,MAAAA,KAFF,uBACpBF,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdG,EAAY,mCAAG,WAAMD,GAAN,yFACHN,EAAAA,GAAAA,IAAA,iBAAoBM,GAAS,CAClDJ,OAAQ,CAAEC,QAASJ,EAASO,MAAAA,KAFJ,uBAClBF,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAQZI,EAAO,mCAAG,WAAMF,GAAN,yFACEN,EAAAA,GAAAA,IAAA,iBAAoBM,EAApB,YAAqC,CAC1DJ,OAAQ,CAAEC,QAASJ,EAASO,MAAAA,KAFT,uBACbF,EADa,EACbA,KADa,kBAIdA,GAJc,2CAAH,sDAQPK,EAAU,mCAAG,WAAMH,GAAN,yFACDN,EAAAA,GAAAA,IAAA,iBAAoBM,EAApB,YAAqC,CAC1DJ,OAAQ,CAAEC,QAASJ,EAASO,MAAAA,KAFN,uBAChBF,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,qD,6HChCR,SAASM,EAAT,GAAgC,IAAhBC,EAAe,EAAfA,YAC7B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,0BACE,kBAAMC,SAPO,SAAAC,GACfA,EAAMC,iBACNN,EAAYE,EACb,EAIG,WACE,kBAAOK,SAbQ,SAAAF,GACnB,IAAQG,EAAUH,EAAMI,OAAhBD,MACRL,EAAcK,EACf,EAUoCE,KAAK,UACpC,mBAAQA,KAAK,SAAb,wBAIP,C,qBCjBYC,EAAS,WACpB,OAAwCV,EAAAA,EAAAA,UAAS,IAAjD,eAAOW,EAAP,KAAqBC,EAArB,KACA,GAA4BZ,EAAAA,EAAAA,UAAS,IAArC,eAAOa,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CACA,IAAMK,EAAO,mCAAG,8GAEWvB,EAAAA,EAAAA,IAAekB,GAF1B,OAENM,EAFM,OAGZC,QAAQC,IAAI,WAAYF,EAASG,SACjCN,EAAUG,EAASG,SAJP,gDAMZF,QAAQC,IAAI,qBAAsB,KAAME,SAN5B,yDAAH,qDASbL,GAVyB,CAW1B,GAAE,CAACL,IAMJ,OACE,iCACE,SAACb,EAAD,CAAMC,YANU,SAAAP,GAClBoB,EAAgBpB,EACjB,IAKIqB,IACC,+BACGA,QADH,IACGA,OADH,EACGA,EAAQS,KAAI,SAAAC,GAAK,OAChB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,kBADjCH,EAAME,GADC,QAS3B,C","sources":["helpers/filmApi.js","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '2996ac4c632c41fce1458614a9485a98';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: { api_key: API_KEY },\n  });\n  return data;\n};\n\nexport const getMovieByName = async query => {\n  const { data } = await axios.get('/search/movie', {\n    params: { api_key: API_KEY, query },\n  });\n  return data;\n};\n\nexport const getMovieById = async query => {\n  const { data } = await axios.get(`/movie/${query}`, {\n    params: { api_key: API_KEY, query },\n  });\n  return data;\n};\n//  /movie/{movie_id}\n\nexport const getCast = async query => {\n  const { data } = await axios.get(`/movie/${query}/credits`, {\n    params: { api_key: API_KEY, query },\n  });\n  return data;\n};\n//   /movie/{movie_id}/credits\n\nexport const getReviews = async query => {\n  const { data } = await axios.get(`/movie/${query}/credits`, {\n    params: { api_key: API_KEY, query },\n  });\n  return data;\n};\n//   /movie/{movie_id}/credits","import React, { useState } from 'react';\n\nexport default function Form({ getDataFilm }) {\n  const [submitFilm, setSubmitFilm] = useState('');\n\n  const handleChange = event => {\n    const { value } = event.target;\n    setSubmitFilm(value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    getDataFilm(submitFilm);\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input onChange={handleChange} type=\"text\" />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n}\n","import Form from 'components/Form/Form';\nimport { getMovieByName } from 'helpers/filmApi';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Movies = () => {\n  const [selectedFilm, setSelectedFilm] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (!selectedFilm) return;\n    const getData = async () => {\n      try {\n        const response = await getMovieByName(selectedFilm);\n        console.log('response', response.results);\n        setMovies(response.results);\n      } catch (error) {\n        console.log('error.message :>> ', error.message);\n      }\n    };\n    getData();\n  }, [selectedFilm]);\n\n  const getDataFilm = data => {\n    setSelectedFilm(data);\n  };\n\n  return (\n    <>\n      <Form getDataFilm={getDataFilm} />\n      {movies && (\n        <ul>\n          {movies?.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>{movie.original_title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n"],"names":["API_KEY","axios","getTrending","params","api_key","data","getMovieByName","query","getMovieById","getCast","getReviews","Form","getDataFilm","useState","submitFilm","setSubmitFilm","onSubmit","event","preventDefault","onChange","value","target","type","Movies","selectedFilm","setSelectedFilm","movies","setMovies","useEffect","getData","response","console","log","results","message","map","movie","to","id","original_title"],"sourceRoot":""}